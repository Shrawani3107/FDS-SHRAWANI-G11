#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;             
    struct node *next;    
};


struct node *top = NULL;


void push() {
    
    struct node *newNode = (struct node *)malloc(sizeof(struct node));
    if (!newNode) {
        printf("Memory allocation failed.\n");
        return;
    }

    
    printf("Enter the data to push: ");
    scanf("%d", &newNode->data);

    
    newNode->next = top;
    top = newNode;

    printf("%d pushed to stack.\n", newNode->data);
}


void pop() {
    if (top == NULL) {
        
        printf("Stack is empty. Nothing to pop.\n");
        return;
    }


    struct node *temp = top;
    printf("Popped: %d\n", temp->data);
    top = top->next;

    
    free(temp);
}


void display() {
    if (top == NULL) {
        printf("Stack is empty.\n");
        return;
    }

    
    struct node *temp = top;
    printf("Stack elements (top to bottom):\n");
    while (temp != NULL) {
        printf("%d\n", temp->data);
        temp = temp->next;
    }
}


int main() {
    int choice;

    printf("Stack using Linked List\n");

    
    while (1) {
        printf("\nMenu:\n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        
        switch (choice) {
            case 1: push(); break;
            case 2: pop(); break;
            case 3: display(); break;
            case 4: 
                printf("Exiting program.\n");
                exit(0);
            default: 
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
